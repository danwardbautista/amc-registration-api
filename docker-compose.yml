version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel_app:latest
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
    env_file:
      - .env
    networks:
      - laravel
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    image: nginx:alpine
    container_name: laravel_web
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - laravel
    depends_on:
      - app

  db:
    image: mysql:8.4
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE:          ${DB_DATABASE}
      MYSQL_USER:              ${DB_USERNAME}
      MYSQL_PASSWORD:          ${DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
    env_file:
      - .env
    command: php artisan queue:work --sleep=3 --tries=3
    networks:
      - laravel
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_healthy

  setup:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_setup
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:delegated
    env_file:
      - .env
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        php artisan wait:db --timeout=60 &&
        echo 'Running migrations...' &&
        php artisan migrate --force &&
        echo 'Seeding initial account...' &&
        php artisan db:seed --class=InitialAccountSeeder --force &&
        echo 'Setup complete!'
      "
    networks:
      - laravel
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

volumes:
  db_data:

networks:
  laravel:
    driver: bridge